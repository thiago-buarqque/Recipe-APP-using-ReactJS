[{"C:\\Users\\every\\WEB projects\\foodyou\\src\\index.js":"1","C:\\Users\\every\\WEB projects\\foodyou\\src\\App.js":"2","C:\\Users\\every\\WEB projects\\foodyou\\src\\components\\Header\\Index.jsx":"3","C:\\Users\\every\\WEB projects\\foodyou\\src\\pages\\SearchPage\\Index.jsx":"4","C:\\Users\\every\\WEB projects\\foodyou\\src\\components\\RecipeItem\\Index.jsx":"5","C:\\Users\\every\\WEB projects\\foodyou\\src\\components\\Filters\\Index.jsx":"6","C:\\Users\\every\\WEB projects\\foodyou\\src\\components\\Filters\\Filters.js":"7","C:\\Users\\every\\WEB projects\\foodyou\\src\\pages\\RecipePage\\Index.jsx":"8","C:\\Users\\every\\WEB projects\\foodyou\\src\\Search.js":"9","C:\\Users\\every\\WEB projects\\foodyou\\src\\pages\\NotFoundPage\\Index.jsx":"10","C:\\Users\\every\\WEB projects\\foodyou\\src\\pages\\Home\\Index.jsx":"11"},{"size":298,"mtime":1608492500287,"results":"12","hashOfConfig":"13"},{"size":641,"mtime":1609003038997,"results":"14","hashOfConfig":"13"},{"size":2274,"mtime":1609002951364,"results":"15","hashOfConfig":"13"},{"size":4405,"mtime":1609001270697,"results":"16","hashOfConfig":"13"},{"size":1377,"mtime":1609002951364,"results":"17","hashOfConfig":"13"},{"size":6703,"mtime":1608127559599,"results":"18","hashOfConfig":"13"},{"size":525,"mtime":1608124184274,"results":"19","hashOfConfig":"13"},{"size":4845,"mtime":1609002951365,"results":"20","hashOfConfig":"13"},{"size":2450,"mtime":1609000865410,"results":"21","hashOfConfig":"13"},{"size":388,"mtime":1609001962705,"results":"22","hashOfConfig":"13"},{"size":862,"mtime":1608657628824,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1fh5bpg",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\every\\WEB projects\\foodyou\\src\\index.js",[],["49","50"],"C:\\Users\\every\\WEB projects\\foodyou\\src\\App.js",[],"C:\\Users\\every\\WEB projects\\foodyou\\src\\components\\Header\\Index.jsx",[],"C:\\Users\\every\\WEB projects\\foodyou\\src\\pages\\SearchPage\\Index.jsx",[],"C:\\Users\\every\\WEB projects\\foodyou\\src\\components\\RecipeItem\\Index.jsx",[],"C:\\Users\\every\\WEB projects\\foodyou\\src\\components\\Filters\\Index.jsx",["51","52","53","54"],"import React from 'react'\r\n\r\nimport { useRef, useEffect, useState } from 'react'\r\n\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport './FiltersStyles.scss'\r\nimport FilterIcon from '../../images/filter.svg'\r\n\r\nimport {applyFilters, \r\n        openCloseFiltersBody,\r\n        alternateCheckBoxState} from './Filters'\r\n\r\nfunction Filters (props) {\r\n    let history = useHistory()\r\n\r\n    const refBtnFilters = useRef(null)\r\n    const refMsgBtnFilters = useRef(null)\r\n    const modifiedFilters = useRef(false)\r\n    \r\n    let currentCategories = props.currentCategories\r\n    let currentNationalities = props.currentNationalities\r\n\r\n    const handleClickBtnFilters = () =>{\r\n        if(modifiedFilters.current){\r\n            refMsgBtnFilters.current.innerHTML = 'Filters'\r\n            modifiedFilters.current = false\r\n            props.updateCurrentCategories(currentCategories)\r\n            props.updateCurrentNationalities(currentNationalities)\r\n        }\r\n        else if(!modifiedFilters.current){\r\n            openCloseFiltersBody()\r\n        }\r\n    }\r\n    \r\n    const handleCheckBoxClick = (e,updateFilter) => {\r\n        let checkBoxValue = alternateCheckBoxState(e)\r\n        updateFilter(e.target,checkBoxValue)\r\n\r\n        modifiedFilters.current = true\r\n        refMsgBtnFilters.current.innerHTML = 'Apply filters'\r\n    }\r\n\r\n    const updateCategories = (checkbox, value) => {\r\n        if(!currentCategories) return\r\n        if(checkbox.checked && !currentCategories.includes(value))\r\n            currentCategories.push(value)\r\n        else if(!checkbox.checked){\r\n            let valueIndex = currentCategories.indexOf(value)\r\n            if(valueIndex > -1)\r\n                currentCategories.splice(valueIndex, 1)\r\n        } \r\n    }\r\n\r\n    const updateNationalities = (checkbox, value) => {\r\n        if(checkbox.checked && !currentNationalities.includes(value))\r\n            currentNationalities.push(value)         \r\n        else if(!checkbox.checked){\r\n            let valueIndex = currentNationalities.indexOf(value)\r\n            if(valueIndex > -1)\r\n                currentNationalities.splice(valueIndex, 1)\r\n        }\r\n    }\r\n\r\n    const CheckBox = (_props) => {\r\n        return(\r\n            <div className=\"filters__checkBox_container\">\r\n                <div className=\"filters__checkBox_parent\">\r\n                    <div className={`div_checkBox${_props.active ? ' div_checkBox__checked' : ''}`} id={`div_checkBox__${_props.data}`}></div>\r\n                    <input type=\"checkbox\" \r\n                            className=\"filters__checkBox\" \r\n                            id={`checkBox__${_props.data}`}\r\n                            name={_props.data}\r\n                            value={_props.data}\r\n                            defaultChecked={_props.active}\r\n                            onClick={(e) => handleCheckBoxClick(e,_props.updateFilter)}/>\r\n                </div>\r\n                <span className=\"filters__checkBox__span\">{_props.data}</span>\r\n            </div>        \r\n        )\r\n    }\r\n\r\n    const CategoriesSection = (_props) => {       \r\n\r\n        return(\r\n            <div id=\"filters__categories_section\" style={{display: _props.currentCategories ? 'inherit' : 'none'}}>\r\n                <h6 className=\"filters__section_title\">Categories</h6>\r\n                <div id=\"filters__categories_body\">\r\n                    {\r\n                        _props.currentCategories ?\r\n\r\n                        _props.currentCategories.map( (data, i) => (\r\n                            <CheckBox key={i} data={data} active={true} updateFilter={updateCategories}/>\r\n                        ))\r\n\r\n                        : ``                       \r\n                    }\r\n                    {\r\n                         _props.availableCategories ?\r\n\r\n                         _props.availableCategories.map( (data, i) => {\r\n                            if(!_props.currentCategories.includes(data))\r\n                                return <CheckBox key={i} data={data} active={false} updateFilter={updateCategories}/>\r\n                            return ``\r\n                         }                             \r\n                         )\r\n \r\n                         : ``\r\n                    }\r\n                </div>\r\n            </div>\r\n        \r\n        )\r\n    }\r\n\r\n    const NationalitiesSection = (_props) => {       \r\n\r\n        return(\r\n            <div id=\"filters__nationalities_section\">\r\n                <h6 className=\"filters__section_title\">Nationalities</h6>\r\n                <div id=\"filters__nationalities_body\">\r\n                    {\r\n                        _props.currentNationalities ?\r\n\r\n                        _props.currentNationalities.map( (data, i) => (\r\n                            <CheckBox key={i} data={data} active={true} updateFilter={updateNationalities}/>\r\n                        ))\r\n\r\n                        : ``\r\n                    }\r\n                    {\r\n                         _props.availableNationalities ?\r\n\r\n                         _props.availableNationalities.map( (data, i) => {\r\n                            if(!_props.currentNationalities.includes(data))\r\n                                return <CheckBox key={i} data={data} active={false} updateFilter={updateNationalities}/>\r\n                            \r\n                                return ``\r\n                        }\r\n                         )\r\n \r\n                         : ``\r\n                    }\r\n                </div>\r\n            </div>\r\n        \r\n        )\r\n    }\r\n\r\n    return (\r\n        <div id=\"filters_container\">\r\n        <button ref={refBtnFilters}\r\n                type=\"button\"\r\n                id=\"btn_apply_filters\" \r\n                onClick={handleClickBtnFilters}\r\n                >\r\n          <img src={FilterIcon} alt=\"Filter icon\"/>\r\n          <span ref={refMsgBtnFilters} id=\"btn_apply_filters_msg\">Filters</span>\r\n        </button>\r\n        <div id=\"filters_body\">\r\n            \r\n            {\r\n                // Current categories filters\r\n                props.currentCategories ?\r\n                <CategoriesSection \r\n                currentCategories={props.currentCategories}\r\n                availableCategories={props.availableCategories ? props.availableCategories : undefined}/> : ``\r\n            }\r\n            {\r\n                // Current nationalities filters\r\n                props.currentNationalities ?\r\n                <NationalitiesSection \r\n                currentNationalities={props.currentNationalities}\r\n                availableNationalities={props.availableNationalities ? props.availableNationalities : undefined}/> : ``\r\n            }\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Filters",["55","56"],"C:\\Users\\every\\WEB projects\\foodyou\\src\\components\\Filters\\Filters.js",[],"C:\\Users\\every\\WEB projects\\foodyou\\src\\pages\\RecipePage\\Index.jsx",[],"C:\\Users\\every\\WEB projects\\foodyou\\src\\Search.js",[],"C:\\Users\\every\\WEB projects\\foodyou\\src\\pages\\NotFoundPage\\Index.jsx",[],"C:\\Users\\every\\WEB projects\\foodyou\\src\\pages\\Home\\Index.jsx",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":3,"column":18,"nodeType":"63","messageId":"64","endLine":3,"endColumn":27},{"ruleId":"61","severity":1,"message":"65","line":3,"column":29,"nodeType":"63","messageId":"64","endLine":3,"endColumn":37},{"ruleId":"61","severity":1,"message":"66","line":10,"column":9,"nodeType":"63","messageId":"64","endLine":10,"endColumn":21},{"ruleId":"61","severity":1,"message":"67","line":15,"column":9,"nodeType":"63","messageId":"64","endLine":15,"endColumn":16},{"ruleId":"57","replacedBy":"68"},{"ruleId":"59","replacedBy":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'applyFilters' is defined but never used.","'history' is assigned a value but never used.",["70"],["71"],"no-global-assign","no-unsafe-negation"]