[{"C:\\Users\\every\\WEB projects\\foodyou\\src\\index.js":"1","C:\\Users\\every\\WEB projects\\foodyou\\src\\App.js":"2","C:\\Users\\every\\WEB projects\\foodyou\\src\\components\\Header\\Index.jsx":"3","C:\\Users\\every\\WEB projects\\foodyou\\src\\components\\Home\\Index.jsx":"4","C:\\Users\\every\\WEB projects\\foodyou\\src\\pages\\SearchPage\\Index.jsx":"5","C:\\Users\\every\\WEB projects\\foodyou\\src\\components\\RecipeItem\\Index.jsx":"6","C:\\Users\\every\\WEB projects\\foodyou\\src\\components\\Filters\\Index.jsx":"7","C:\\Users\\every\\WEB projects\\foodyou\\src\\components\\Filters\\Filters.js":"8","C:\\Users\\every\\WEB projects\\foodyou\\src\\pages\\RecipePage\\Index.jsx":"9","C:\\Users\\every\\WEB projects\\foodyou\\src\\Search.js":"10","C:\\Users\\every\\WEB projects\\foodyou\\src\\pages\\NotFoundPage\\Index.jsx":"11"},{"size":298,"mtime":1608492500287,"results":"12","hashOfConfig":"13"},{"size":646,"mtime":1609002206212,"results":"14","hashOfConfig":"13"},{"size":2273,"mtime":1608491183989,"results":"15","hashOfConfig":"13"},{"size":862,"mtime":1608657628824,"results":"16","hashOfConfig":"13"},{"size":4405,"mtime":1609001270697,"results":"17","hashOfConfig":"13"},{"size":1375,"mtime":1609001077547,"results":"18","hashOfConfig":"13"},{"size":6703,"mtime":1608127559599,"results":"19","hashOfConfig":"13"},{"size":525,"mtime":1608124184274,"results":"20","hashOfConfig":"13"},{"size":4811,"mtime":1609001372058,"results":"21","hashOfConfig":"13"},{"size":2450,"mtime":1609000865410,"results":"22","hashOfConfig":"13"},{"size":388,"mtime":1609001962705,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1fh5bpg",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\every\\WEB projects\\foodyou\\src\\index.js",[],["52","53"],"C:\\Users\\every\\WEB projects\\foodyou\\src\\App.js",[],"C:\\Users\\every\\WEB projects\\foodyou\\src\\components\\Header\\Index.jsx",["54"],"import './HeaderStyles.scss'\r\n\r\nimport { useRef} from 'react'\r\nimport { useHistory} from 'react-router-dom'\r\n\r\nimport Logo from '../../images/logo.svg'\r\nimport { ReactComponent as IconSearch } from '../../images/search.svg'\r\n\r\nconst Header = () => {\r\n  const ALLOWED_KEYS_MAX_LENGTH = [\r\n    'Backspace',\r\n    'Enter',\r\n    'Delete',\r\n    'ArrowUp',\r\n    'ArrowDown',\r\n    'ArrowLeft',\r\n    'ArrowRight',\r\n    'End',\r\n    'Home',\r\n    'Control',\r\n    'Shift',\r\n    'Alt',\r\n    'Tab'\r\n  ]\r\n\r\n  let history = useHistory()\r\n\r\n  const refInputSearch = useRef(null)\r\n  const refSearchContainer = useRef(null)\r\n\r\n  const handleKeyDown = (e) => {\r\n    let $search = document.querySelector('#in_search')\r\n    if($search.value.length >= 50 && !ALLOWED_KEYS_MAX_LENGTH.includes(e.key)) e.preventDefault();\r\n  }\r\n\r\n  const handleSearch = (e) => {    \r\n    if(e.key === 'Enter' || e.type == 'click'){\r\n        if(refInputSearch.current.value.trim().length !== 0)\r\n            history.push(`/s/${refInputSearch.current.value.toLowerCase()}`)\r\n        else if(!refSearchContainer.current.classList.contains('invalidSearchInput'))    \r\n            refSearchContainer.current.classList.add('invalidSearchInput')\r\n    }\r\n    else if(refSearchContainer.current.classList.contains('invalidSearchInput'))\r\n        refSearchContainer.current.classList.remove('invalidSearchInput')\r\n    \r\n    return false\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <div id=\"header_logo_container\">\r\n        <img src={Logo} id=\"header_logo\" title=\"foodyou\" alt=\"Logo foodyou\"/>\r\n      </div>\r\n        <div ref={refSearchContainer} id=\"header_search_container\">\r\n            <input ref={refInputSearch}\r\n                   type=\"text\"\r\n                   name=\"search\"\r\n                   id=\"in_search\" \r\n                   placeholder=\"Search\" \r\n                   autoComplete=\"off\"\r\n                   onKeyDown={handleKeyDown}\r\n                   onKeyUp={handleSearch}/>\r\n              <button type=\"button\" \r\n                      id=\"btn_search_recipe\" \r\n                      className=\"remove_user_select\"\r\n                      onClick={handleSearch}>\r\n                  <IconSearch id=\"search_icon\" className=\"icon\"/>\r\n              </button>\r\n        </div>\r\n    </header>\r\n  )\r\n}\r\nexport default Header","C:\\Users\\every\\WEB projects\\foodyou\\src\\components\\Home\\Index.jsx",[],"C:\\Users\\every\\WEB projects\\foodyou\\src\\pages\\SearchPage\\Index.jsx",[],"C:\\Users\\every\\WEB projects\\foodyou\\src\\components\\RecipeItem\\Index.jsx",["55","56"],"import React from 'react'\r\n\r\nimport './RecipeItemStyles.scss'\r\n\r\nconst RecipeItem = (props) =>{\r\n    let recipe = props.recipe\r\n\r\n    let strTags = recipe.strArea\r\n    if(recipe.strTags){\r\n        let tags = recipe.strTags.split(',')       \r\n        strTags += ' - ' \r\n        if(tags.length > 0)\r\n            tags.forEach( (tag, i) => { strTags += (i == 0 ? \"\" : \", \") + tag })\r\n        else if(tags.length == 0)\r\n            strTags = tags[0]\r\n    }\r\n\r\n    return( \r\n        <div className=\"recipe_item\">\r\n            <div className=\"recipe_item__image_container\">\r\n                <a href={`/r/${recipe.strMeal.toLowerCase()}`} className=\"recipe_item_link\">\r\n                    <img \r\n                    src={recipe.strMealThumb} \r\n                    className=\"recipe_item__image\"\r\n                    alt={recipe.strMeal.toLowerCase()} \r\n                    title={recipe.strMeal}/>\r\n                </a>\r\n            </div>\r\n            <div className=\"recipe_item__info_container\">            \r\n                <a href={`/r/${recipe.strMeal.toLowerCase()}`} className=\"recipe_item__title\">\r\n                    {recipe.strMeal}\r\n                </a>                \r\n                <div className=\"recipe_item__tags_container\">\r\n                    <p>{strTags}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipeItem","C:\\Users\\every\\WEB projects\\foodyou\\src\\components\\Filters\\Index.jsx",["57","58","59","60"],"import React from 'react'\r\n\r\nimport { useRef, useEffect, useState } from 'react'\r\n\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport './FiltersStyles.scss'\r\nimport FilterIcon from '../../images/filter.svg'\r\n\r\nimport {applyFilters, \r\n        openCloseFiltersBody,\r\n        alternateCheckBoxState} from './Filters'\r\n\r\nfunction Filters (props) {\r\n    let history = useHistory()\r\n\r\n    const refBtnFilters = useRef(null)\r\n    const refMsgBtnFilters = useRef(null)\r\n    const modifiedFilters = useRef(false)\r\n    \r\n    let currentCategories = props.currentCategories\r\n    let currentNationalities = props.currentNationalities\r\n\r\n    const handleClickBtnFilters = () =>{\r\n        if(modifiedFilters.current){\r\n            refMsgBtnFilters.current.innerHTML = 'Filters'\r\n            modifiedFilters.current = false\r\n            props.updateCurrentCategories(currentCategories)\r\n            props.updateCurrentNationalities(currentNationalities)\r\n        }\r\n        else if(!modifiedFilters.current){\r\n            openCloseFiltersBody()\r\n        }\r\n    }\r\n    \r\n    const handleCheckBoxClick = (e,updateFilter) => {\r\n        let checkBoxValue = alternateCheckBoxState(e)\r\n        updateFilter(e.target,checkBoxValue)\r\n\r\n        modifiedFilters.current = true\r\n        refMsgBtnFilters.current.innerHTML = 'Apply filters'\r\n    }\r\n\r\n    const updateCategories = (checkbox, value) => {\r\n        if(!currentCategories) return\r\n        if(checkbox.checked && !currentCategories.includes(value))\r\n            currentCategories.push(value)\r\n        else if(!checkbox.checked){\r\n            let valueIndex = currentCategories.indexOf(value)\r\n            if(valueIndex > -1)\r\n                currentCategories.splice(valueIndex, 1)\r\n        } \r\n    }\r\n\r\n    const updateNationalities = (checkbox, value) => {\r\n        if(checkbox.checked && !currentNationalities.includes(value))\r\n            currentNationalities.push(value)         \r\n        else if(!checkbox.checked){\r\n            let valueIndex = currentNationalities.indexOf(value)\r\n            if(valueIndex > -1)\r\n                currentNationalities.splice(valueIndex, 1)\r\n        }\r\n    }\r\n\r\n    const CheckBox = (_props) => {\r\n        return(\r\n            <div className=\"filters__checkBox_container\">\r\n                <div className=\"filters__checkBox_parent\">\r\n                    <div className={`div_checkBox${_props.active ? ' div_checkBox__checked' : ''}`} id={`div_checkBox__${_props.data}`}></div>\r\n                    <input type=\"checkbox\" \r\n                            className=\"filters__checkBox\" \r\n                            id={`checkBox__${_props.data}`}\r\n                            name={_props.data}\r\n                            value={_props.data}\r\n                            defaultChecked={_props.active}\r\n                            onClick={(e) => handleCheckBoxClick(e,_props.updateFilter)}/>\r\n                </div>\r\n                <span className=\"filters__checkBox__span\">{_props.data}</span>\r\n            </div>        \r\n        )\r\n    }\r\n\r\n    const CategoriesSection = (_props) => {       \r\n\r\n        return(\r\n            <div id=\"filters__categories_section\" style={{display: _props.currentCategories ? 'inherit' : 'none'}}>\r\n                <h6 className=\"filters__section_title\">Categories</h6>\r\n                <div id=\"filters__categories_body\">\r\n                    {\r\n                        _props.currentCategories ?\r\n\r\n                        _props.currentCategories.map( (data, i) => (\r\n                            <CheckBox key={i} data={data} active={true} updateFilter={updateCategories}/>\r\n                        ))\r\n\r\n                        : ``                       \r\n                    }\r\n                    {\r\n                         _props.availableCategories ?\r\n\r\n                         _props.availableCategories.map( (data, i) => {\r\n                            if(!_props.currentCategories.includes(data))\r\n                                return <CheckBox key={i} data={data} active={false} updateFilter={updateCategories}/>\r\n                            return ``\r\n                         }                             \r\n                         )\r\n \r\n                         : ``\r\n                    }\r\n                </div>\r\n            </div>\r\n        \r\n        )\r\n    }\r\n\r\n    const NationalitiesSection = (_props) => {       \r\n\r\n        return(\r\n            <div id=\"filters__nationalities_section\">\r\n                <h6 className=\"filters__section_title\">Nationalities</h6>\r\n                <div id=\"filters__nationalities_body\">\r\n                    {\r\n                        _props.currentNationalities ?\r\n\r\n                        _props.currentNationalities.map( (data, i) => (\r\n                            <CheckBox key={i} data={data} active={true} updateFilter={updateNationalities}/>\r\n                        ))\r\n\r\n                        : ``\r\n                    }\r\n                    {\r\n                         _props.availableNationalities ?\r\n\r\n                         _props.availableNationalities.map( (data, i) => {\r\n                            if(!_props.currentNationalities.includes(data))\r\n                                return <CheckBox key={i} data={data} active={false} updateFilter={updateNationalities}/>\r\n                            \r\n                                return ``\r\n                        }\r\n                         )\r\n \r\n                         : ``\r\n                    }\r\n                </div>\r\n            </div>\r\n        \r\n        )\r\n    }\r\n\r\n    return (\r\n        <div id=\"filters_container\">\r\n        <button ref={refBtnFilters}\r\n                type=\"button\"\r\n                id=\"btn_apply_filters\" \r\n                onClick={handleClickBtnFilters}\r\n                >\r\n          <img src={FilterIcon} alt=\"Filter icon\"/>\r\n          <span ref={refMsgBtnFilters} id=\"btn_apply_filters_msg\">Filters</span>\r\n        </button>\r\n        <div id=\"filters_body\">\r\n            \r\n            {\r\n                // Current categories filters\r\n                props.currentCategories ?\r\n                <CategoriesSection \r\n                currentCategories={props.currentCategories}\r\n                availableCategories={props.availableCategories ? props.availableCategories : undefined}/> : ``\r\n            }\r\n            {\r\n                // Current nationalities filters\r\n                props.currentNationalities ?\r\n                <NationalitiesSection \r\n                currentNationalities={props.currentNationalities}\r\n                availableNationalities={props.availableNationalities ? props.availableNationalities : undefined}/> : ``\r\n            }\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Filters",["61","62"],"C:\\Users\\every\\WEB projects\\foodyou\\src\\components\\Filters\\Filters.js",[],"C:\\Users\\every\\WEB projects\\foodyou\\src\\pages\\RecipePage\\Index.jsx",["63","64"],"import React, { useEffect } from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useState, useRef} from 'react'\r\n\r\nimport './RecipePageStyles.scss'\r\n\r\nimport {fetchRecipe} from '../../Search'\r\n\r\nimport LoadingImg from '../../images/loading.svg'\r\n\r\nconst RecipePage = (props) => {\r\n    const {recipe} = useParams()\r\n\r\n    const result = useRef(null)\r\n    const [fetched, setFetched] = useState(false)\r\n\r\n    const refLoading = useRef(null)\r\n\r\n    let resultIngredients = []\r\n    let [resultTags, setResultTags] = useState(undefined)\r\n\r\n    if(fetched && result.current){\r\n         // Get and formate result tags\r\n         let auxResultTags = result.current.strArea\r\n         if(result.current.strTags){\r\n             let auxTags = result.current.strTags.split(',')\r\n             auxResultTags = result.current.strArea + ' - '\r\n             auxTags.forEach( (tag, i) => {\r\n                 auxResultTags += (i !== auxTags.length - 1) ? tag + ', ' : tag\r\n             })             \r\n         }\r\n         if(!resultTags)\r\n            setResultTags(auxResultTags)\r\n\r\n        let auxIngredients = []\r\n        let counter = 0\r\n\r\n        for (const [key, value] of Object.entries(result.current)) {\r\n            if(key.includes('strIngredient') && value !== '' && value !== ' ' && value)\r\n                auxIngredients.push(value)\r\n            if(key.includes('strMeasure') &&                \r\n                 value !== '' &&\r\n                 value !== ' ' &&\r\n                 value !== null){\r\n                resultIngredients.push({ingredient: auxIngredients[counter], measure: value})\r\n                counter += 1\r\n            }\r\n        }       \r\n    }\r\n\r\n    const getRecipe = async () => {\r\n        await fetchRecipe(recipe)\r\n        .then( data => {\r\n\r\n            if(data.meals)            \r\n                result.current = data.meals[0]\r\n            setFetched(true)            \r\n        })\r\n    }\r\n\r\n    const LoadingContainer = (_props) => {\r\n        return (\r\n        <div ref={refLoading} className=\"loading_container\">\r\n            <img src={LoadingImg} className=\"icon loading_img\"/>\r\n        </div>\r\n    )}\r\n\r\n    const RecipeContainer = (_props) => {\r\n        return (\r\n            <div id=\"recipe_page__recipe_container\">\r\n                <p id=\"recipe_name\" className=\"title\">{result.current.strMeal}</p>\r\n                <div id=\"recipe_page__recipe_thumb\">\r\n                    <img src={result.current.strMealThumb} alt={result.current.strMeal} title={result.current.strMeal}/>\r\n                </div>\r\n                <div id=\"recipe_page__recipe_ingredients\">\r\n                    <p className=\"recipe_sec_title title\">Ingredients</p>\r\n                    <div id=\"recipes_ingredients__container\">\r\n                        {\r\n                            resultIngredients.map( (obj, i) => \r\n                                <p key={i} className=\"recipe_ingredient\">\r\n                                    <span>{obj.ingredient}</span> ({obj.measure})\r\n                                </p>\r\n                            )\r\n                        }\r\n                    </div>                    \r\n                </div>\r\n                <div id=\"recipe_page__recipe_instructions\">\r\n                    <p className=\"recipe_sec_title title\">Instructions</p>\r\n                    <p id=\"recipe_strInstructions\">{result.current.strInstructions}</p>                    \r\n                </div>\r\n                <div id=\"recipe_page__recipe_tags\">\r\n                    {\r\n                        result.current.strYoutube ? \r\n                        <p id=\"str_help\">Need help? See the <a href={result.current.strYoutube} target=\"_blank\" id=\"link_recipe_video\" className=\"remove_user_select\">recipe video</a></p>\r\n                        : ``\r\n                    }                    \r\n                    {         \r\n                        resultTags ? \r\n                        <p id=\"str_tags\">{resultTags}</p> : ``\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(!fetched)\r\n            getRecipe()\r\n\r\n        if(fetched)\r\n            refLoading.current.classList.add('hide_loading_container')\r\n        else\r\n            refLoading.current.classList.remove('hide_loading_container')\r\n    })\r\n\r\n    return(\r\n        <div id=\"recipe_page__container\">\r\n            <div id=\"recipe_page__content\">\r\n                <LoadingContainer/>\r\n                {\r\n                    fetched && result.current ? \r\n                    <RecipeContainer/> : ``\r\n                }\r\n                {\r\n                    fetched && !result.current ?\r\n                    <p id=\"str_recipe_not_found\">Recipe not found</p> : ``\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipePage","C:\\Users\\every\\WEB projects\\foodyou\\src\\Search.js",[],"C:\\Users\\every\\WEB projects\\foodyou\\src\\pages\\NotFoundPage\\Index.jsx",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":37,"column":36,"nodeType":"71","messageId":"72","endLine":37,"endColumn":38},{"ruleId":"69","severity":1,"message":"70","line":13,"column":55,"nodeType":"71","messageId":"72","endLine":13,"endColumn":57},{"ruleId":"69","severity":1,"message":"70","line":14,"column":29,"nodeType":"71","messageId":"72","endLine":14,"endColumn":31},{"ruleId":"73","severity":1,"message":"74","line":3,"column":18,"nodeType":"75","messageId":"76","endLine":3,"endColumn":27},{"ruleId":"73","severity":1,"message":"77","line":3,"column":29,"nodeType":"75","messageId":"76","endLine":3,"endColumn":37},{"ruleId":"73","severity":1,"message":"78","line":10,"column":9,"nodeType":"75","messageId":"76","endLine":10,"endColumn":21},{"ruleId":"73","severity":1,"message":"79","line":15,"column":9,"nodeType":"75","messageId":"76","endLine":15,"endColumn":16},{"ruleId":"65","replacedBy":"80"},{"ruleId":"67","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":64,"column":13,"nodeType":"84","endLine":64,"endColumn":65},{"ruleId":"85","severity":1,"message":"86","line":94,"column":97,"nodeType":"87","endLine":94,"endColumn":112},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'applyFilters' is defined but never used.","'history' is assigned a value but never used.",["88"],["89"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]